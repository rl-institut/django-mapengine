[project]
name = "django-mapengine"
version = "3.2.1"
description = "Map engine for maplibre in django"
authors = [
    {name = "Hendrik Huyskens", email = "hendrik.huyskens@rl-institut.de"}
]
readme = "README.md"
classifiers = [
    "Programming Language :: Python :: 3",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
]
requires-python = ">=3.9,<4.0"
dependencies = [
    "range-key-dict>=1.1.0",
    "django-environ>=0.10.0",
    "djangorestframework>=3.14.0",
    "djangorestframework-mvt>=0.2.5",
    "legacy-cgi>=2.6.3",
    "django-appconf>=1.0.5",
    "django-geojson>=3.2.1",
    "django-distill>=3.1.3",
]

[project.urls]
Homepage = "https://github.com/rl-institut/django-mapengine"
Issues = "https://github.com/rl-institut/django-mapengine/issues"

[tool.poetry]
packages = [{include = "django_mapengine"}]

[tool.poetry.group.dev.dependencies]
django = "^4.2"
black = "^23.2.1"
isort = "^5.12.0"
flake8 = "^7.0.0"
pylint = "^3.0.3"
pylint-django = "^2.5.5"
pytest = "^8.2.1"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 120

[tool.isort]
profile = "black"

[tool.ruff]
line-length = 120
# select = ["ALL"]
ignore = [
  "D203",    # 1 blank line required before class docstring
  "D212",    # Multi-line docstring summary should start at the first line pydocstyle
  "ANN101",  # Missing type annotation for `self` in method
  "ANN003",  # Missing type annotation for `**kwargs`
  "EM102",   # Exception must not use an f-string literal, assign to variable first
  "TRY003",  # Avoid specifying long messages outside the exception class
  "S101",    # Use of `assert` detected
  "UP007",   # Use `X | Y` for type annotations
  "B905",    # `zip()` without an explicit `strict=` parameter
]
fix = true
show-fixes = true
unfixable = ["UP007"]
